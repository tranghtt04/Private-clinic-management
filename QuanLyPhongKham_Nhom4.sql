-- Tạo database
CREATE DATABASE QLPK;
USE QLPK;
-- Tạo bảng bệnh nhân
CREATE TABLE BENHNHAN (
MABN VARCHAR(10) PRIMARY KEY,
TENBN NVARCHAR(50) NOT NULL,
GIOITINH NVARCHAR(5) NOT NULL,
NGAYSINH DATE NOT NULL,
DIACHI NVARCHAR(100) NOT NULL,
SODIENTHOAI VARCHAR(10) NOT NULL,
TINHTRANGSUCKHOE NVARCHAR(100) NOT NULL
)
-- Tạo bảng bác sĩ
CREATE TABLE BACSI (
MABS VARCHAR(10) PRIMARY KEY,
TENBS NVARCHAR(50) NOT NULL,
CHUYENNGANH NVARCHAR(30) NOT NULL
)
-- Tạo bảng thuốc
CREATE TABLE THUOC (
MATHUOC VARCHAR(10) PRIMARY KEY,
TENTHUOC NVARCHAR(30) NOT NULL,
GIATHUOC FLOAT NOT NULL,
)
-- Tạo bảng đơn thuốc
CREATE TABLE DONTHUOC (
MADT VARCHAR(10) PRIMARY KEY,
MABS VARCHAR(10) FOREIGN KEY REFERENCES BACSI(MABS),
MABN VARCHAR(10) FOREIGN KEY REFERENCES BENHNHAN(MABN)
)
-- Tạo bảng chi tiết đơn thuốc
CREATE TABLE CT_DONTHUOC (
MADT VARCHAR(10)FOREIGN KEY REFERENCES DONTHUOC(MADT),
MATHUOC VARCHAR(10) FOREIGN KEY REFERENCES THUOC(MATHUOC),
SOLUONG INT NOT NULL,
PRIMARY KEY(MADT,MATHUOC)
)
-- Tạo bảng dịch vụ khám
CREATE TABLE DVKHAM (
MADV VARCHAR(10) PRIMARY KEY,
TENDV NVARCHAR(30) NOT NULL,
GIADV FLOAT NOT NULL
)
-- Tạo bảng hóa đơn
CREATE TABLE HOADON (
MAHD VARCHAR(10) PRIMARY KEY,
MABN VARCHAR(10) FOREIGN KEY REFERENCES BENHNHAN(MABN),
MADT VARCHAR(10) FOREIGN KEY REFERENCES DONTHUOC(MADT),
NGAYLAP DATE NOT NULL,
TONGTIEN FLOAT NOT NULL
)
-- Tạo bảng hóa đơn – dịch vụ
CREATE TABLE HOADON_DV (
MAHD VARCHAR(10) FOREIGN KEY REFERENCES HOADON(MAHD),
MADV VARCHAR(10) FOREIGN KEY REFERENCES DVKHAM(MADV),
SOLUONG INT NOT NULL,
PRIMARY KEY(MAHD,MADV)
)
-- Chèn dữ liệu vào bảng BENHNHAN
INSERT INTO BENHNHAN VALUES
('BN001',N'NGUYỄN VĂN AN',N'NAM','01/13/1987',N'HÀ NỘI','0843132202',N'SỐT'),
('BN002',N'LÊ VĂN TRƯỜNG',N'NAM','09/2/1997',N'QUẢNG NINH','0581525678',N'HO'),
('BN003',N'NGUYỄN HIẾU',N'NAM','01/12/1987',N'HẢI PHÒNG','0843131111',N'VIÊM XOANG'),
('BN004',N'TRẦN THANH VÂN',N'NỮ','01/23/1987',N'HÀ NỘI','0918345623',N'VIÊM LỢI'),
('BN005',N'NGUYỄN ÁNH TUYẾT',N'NỮ','02/18/1997',N'NHA TRANG','0928345987',N'SỐT'),
('BN006',N'TRẦN MINH THƯ',N'NỮ','08/08/1997',N'THÁI BÌNH','0975621445',N'UNG THƯ PHỔI'),
('BN007',N'LÊ THANH TÙNG',N'NAM','05/09/1989',N'BÌNH ĐỊNH','0368920455',N'VIÊM ANIDAN'),
('BN008',N'HOÀNG MINH HẬU',N'NAM','02/23/1987',N'NHA TRANG','0398463333',N'CAO HUYẾT ÁP'),
('BN009',N'CAO TẤN NGHĨA',N'NAM','11/17/1997',N'NAM ĐỊNH','0977459923',N'SUY TIM'),
('BN010',N'LÊ TÚ HOÀI',N'NỮ','05/22/1982',N'HẢI PHÒNG','0821564471',N'VIÊM PHỔI')
 
-- Chèn dữ liệu vào bảng BACSI
INSERT INTO BACSI VALUES
('BS001',N'NGUYỄN TUẤN',N'HÔ HẤP'),
('BS002',N'HỒ TUẤN ANH',N'TAI MŨI HỌNG'),
('BS003',N'NGUYỄN THANH TÍN',N'RĂNG HÀM MẶT'),
('BS004',N'LÊ NGỌC MAI',N'NGOẠI KHOA'),
('BS005',N'TRẦN THƯ MINH',N'ĐA KHOA'),
('BS006',N'PHẠM QUANG',N'DA LIỄU')
 
-- -- Chèn dữ liệu vào bảng THUOC
INSERT INTO THUOC VALUES
('T001',N'KHÁNG SINH',80000),
('T002',N'HÓA TRỊ',45000),
('T003',N'HẠ SỐT',50000),
('T004',N'TIM MẠCH',400000),
('T005',N'HUYẾT ÁP',100000)
 
-- Chèn dữ liệu vào bảng DONTHUOC
INSERT INTO DONTHUOC VALUES
('DT001','BS001','BN006'),
('DT002','BS004','BN001'),
('DT003','BS002','BN003'),
('DT004','BS001','BN010'),
('DT005','BS003','BN004'),
('DT006','BS005','BN009'),
('DT007','BS002','BN007'),
('DT008','BS005','BN008'),
('DT009','BS005','BN009')
 
-- Chèn dữ liệu vào bảng CT_DONTHUOC
INSERT INTO CT_DONTHUOC VALUES
('DT001','T002',5),
('DT002','T003',4),
('DT003','T001',7),
('DT004','T001',4),
('DT005','T001',5),
('DT006','T004',9),
('DT007','T001',7),
('DT008','T005',5),
('DT009','T004',6)
 
-- Chèn dữ liệu vào bảng DVKHAM
INSERT INTO DVKHAM VALUES
('DV001',N'XÉT NGHIỆM',400000),
('DV002',N'KHÁM LÂM SÀNG',500000),
('DV003',N'SIÊU ÂM',550000),
('DV004',N'X QUANG',600000),
('DV005',N'NỘI SOI',850000)
 
-- Chèn dữ liệu vào bảng HOADON
INSERT INTO HOADON VALUES
('HD001','BN006','DT001','12/4/2022',1425000),
('HD002','BN001','DT002','1/2/2023',2700000),
('HD003','BN003','DT003','3/14/2023',2060000),
('HD004','BN010','DT004','11/9/2022',1420000),
('HD005','BN004','DT005','5/7/2023',4000000),
('HD006','BN009','DT006','6/20/2023',5800000),
('HD007','BN007','DT007','7/2/2023',3960000),
('HD008','BN008','DT008','10/9/2023',2100000),
('HD009','BN009','DT009','1/10/2023',2400000)
 
-- Chèn dữ liệu vào bảng HOADON_DV
INSERT INTO HOADON_DV VALUES
('HD001','DV001',3),
('HD002','DV002',5),
('HD003','DV002',3),
('HD004','DV003',2),
('HD005','DV004',6),
('HD006','DV003',4),
('HD007','DV005',4),
('HD008','DV001',4)

--Truy vấn đơn giản: 3 câu
--1.1 Hiển thị danh sách các bác sĩ và chuyên ngành của họ
SELECT * FROM BACSI
 
--1.2 Cho biết tên của các bác sĩ làm việc ở chuyên ngành "Hô hấp"?
SELECT TENBS, CHUYENNGANH
FROM BACSI 
WHERE CHUYENNGANH =N'HÔ HẤP'
 
--1.3 Lấy thông tin của tất cả bệnh nhân trong bảng BENHNHAN:
 SELECT * FROM BENHNHAN;
 
--2. Truy vấn với Aggregate Functions: 7 câu 

--2.1 Tính tổng doanh số của mỗi bác sĩ.
SELECT BS.MABS, BS.TENBS, SUM(HDDV.SOLUONG*DV.GIADV + CTDT.SOLUONG*T.GIATHUOC) AS N'DOANH SỐ'
FROM BACSI BS, DONTHUOC DT, CT_DONTHUOC CTDT, THUOC T, HOADON HD, HOADON_DV HDDV, DVKHAM DV
WHERE BS.MABS=DT.MABS AND DT.MADT=CTDT.MADT AND CTDT.MATHUOC=T.MATHUOC AND DT.MADT=HD.MADT AND HD.MAHD=HDDV.MAHD AND HDDV.MADV=DV.MADV
GROUP BY BS.MABS, BS.TENBS
 
--2.2 Có bao nhiêu đơn thuốc cho mỗi bệnh nhân?
SELECT BENHNHAN.MABN, BENHNHAN.TENBN, COUNT(DONTHUOC.MADT) AS ‘Số lượng đơn thuốc’
FROM BENHNHAN
LEFT JOIN DONTHUOC ON BENHNHAN.MABN = DONTHUOC.MABN
GROUP BY BENHNHAN.MABN, BENHNHAN.TENBN;
 
--2.3 Tính tổng số lượng thuốc trên 1 đơn thuốc.
SELECT MADT, SUM(SOLUONG) AS TONG_SO_LUONG_THUOC
   FROM CT_DONTHUOC
   GROUP BY MADT;
 
--2.4. số lượng bác sĩ có chuyên ngành "NGOẠI KHOA"
SELECT CHUYENNGANH, COUNT(*) AS SOBACSI
FROM BACSI
WHERE CHUYENNGANH = N'NGOẠI KHOA'
GROUP BY CHUYENNGANH;
 
--2.5. Tổng giá trị của tất cả thuốc mà phòng khám có.
SELECT SUM(GIATHUOC) 
AS TONGGIATHUOC 
FROM THUOC;
 
--2.6 Có bao nhiêu bác sĩ trong phòng khám?
SELECT COUNT(*) AS 'Số lượng bác sĩ trong phòng khám'
FROM BACSI
 
--2.7 Có bao nhiêu Bệnh nhân có giới tính Nam và mắc bệnh Suy tim?
SELECT COUNT(*) AS 'Số bệnh nhân có giới tính Nam và mắc bệnh suy tim'
FROM BENHNHAN
WHERE GIOITINH ='NAM'
AND TINHTRANGSUCKHOE ='SUY TIM'
 
--3. Truy vấn với mệnh đề having: 5 câu
--3.1 Hiển thị danh sách bác sĩ có số lượng bệnh nhân đang điều trị từ 2 trở lên
SELECT BS.MABS, BS.TENBS, COUNT(DISTINCT BN.MABN) AS N'SỐ LƯỢNG BỆNH NHÂN'
FROM BACSI BS JOIN DONTHUOC DT ON BS.MABS=DT.MABS
JOIN BENHNHAN BN ON DT.MABN=BN.MABN
GROUP BY BS.MABS, BS.TENBS
HAVING COUNT(DISTINCT BN.MABN) >= 2;
 
--3.2 Tính tổng số lượng dịch vụ khám được sử dụng trong mỗi hóa đơn có tổng giá trị dịch vụ lớn hơn 400,000:
SELECT HD.MAHD, SUM(HDV.SOLUONG) AS TONG_SOLUONG_DV
FROM HOADON HD
INNER JOIN HOADON_DV HDV ON HD.MAHD = HDV.MAHD
INNER JOIN DVKHAM DV ON HDV.MADV = DV.MADV
WHERE HDV.SOLUONG * DV.GIADV > 400000
GROUP BY HD.MAHD
HAVING SUM(HDV.SOLUONG) > 0;
 
--3.3 Danh sách các loại thuốc có tổng lượng mua lớn hơn 5
SELECT TENTHUOC, 
SUM(SOLUONG) 
AS TONGSOLUONG
FROM CT_DONTHUOC
JOIN THUOC ON CT_DONTHUOC.MATHUOC = THUOC.MATHUOC
GROUP BY TENTHUOC
HAVING SUM(SOLUONG) > 5;
 
--3.4 Cho biết các dịch vụ có từ 2 bệnh nhân trở lên:
SELECT DVKHAM.TENDV, COUNT(DISTINCT BENHNHAN.MABN) AS SoLuongBenhNhan
FROM DVKHAM
JOIN HOADON_DV ON DVKHAM.MADV = HOADON_DV.MADV
JOIN HOADON ON HOADON_DV.MAHD = HOADON.MAHD
JOIN BENHNHAN ON HOADON.MABN = BENHNHAN.MABN
GROUP BY DVKHAM.TENDV
HAVING COUNT(DISTINCT BENHNHAN.MABN) >= 2;
 
--3.5 Cho biết tên các bệnh nhân có số lượng 1 lần khám
SELECT BN.TENBN AS 'Tên bệnh nhân'
FROM BENHNHAN BN
JOIN DONTHUOC DT ON BN.MABN = DT.MABN
JOIN HOADON HD ON HD.MABN = BN.MABN
GROUP BY BN.TENBN, BN.MABN
HAVING COUNT(HD.MAHD) = 1;
 
--4. Truy vấn lớn nhất, nhỏ nhất: 3 câu
--4.1 Hiển thị thông tin dịch vụ khám có giá thấp nhất.
SELECT TOP 1 * 
FROM DVKHAM 
ORDER BY GIADV ASC 
 
--4.2 Thông tin của bệnh nhân có tuổi lớn nhất
SELECT TOP 1
    BENHNHAN.*,
    DATEDIFF(YEAR, BENHNHAN.NGAYSINH, GETDATE()) AS TUOI
FROM BENHNHAN
ORDER BY TUOI DESC;
 
--4.3 Cho biết tên bệnh nhân, mã bệnh nhân, địa chỉ, giới tính, SĐT có tổng tiền cao nhất?
SELECT TOP 1
    BN.TENBN,
    BN.MABN,
    BN.DIACHI,
    BN.GIOITINH,
    BN.SODIENTHOAI,
    SUM(HD.TONGTIEN) AS TONGTIEN
FROM
    BENHNHAN BN
JOIN
    HOADON HD ON BN.MABN = HD.MABN
GROUP BY
    BN.TENBN, BN.MABN, BN.DIACHI, BN.GIOITINH, BN.SODIENTHOAI
ORDER BY
    TONGTIEN DESC;
 
--5. Truy vấn Không/chưa có: (Not In và left/right join): 5 câu
--5.1 Hiển thị thông tin bệnh nhân và bác sĩ điều trị tương ứng (bao gồm những bệnh nhân chưa có bác sĩ điều trị).
SELECT BN.MABN, BN.TENBN, BN.TINHTRANGSUCKHOE, BS.TENBS
FROM BENHNHAN BN 
LEFT JOIN DONTHUOC DT ON DT.MABN=BN.MABN
LEFT JOIN BACSI BS ON BS.MABS=DT.MABS
 
--5.2 Cho biết mã số và tên những bệnh nhân chưa được kê đơn thuốc:
SELECT MABN, TENBN
FROM BENHNHAN
WHERE MABN NOT IN (SELECT MABN FROM DONTHUOC);
 
--5.3 Lấy thông tin hóa đơn chưa có dịch vụ:
SELECT *
FROM HOADON
WHERE MAHD NOT IN (SELECT MAHD FROM HOADON_DV)
 
--5.4 Thông tin về tất cả các bác sĩ cùng với số lượng đơn thuốc mà họ đã kê
SELECT BACSI.MABS, BACSI.TENBS, 
COUNT(DONTHUOC.MADT) 
AS TONGSODONTHUOC
FROM BACSI
RIGHT JOIN DONTHUOC ON BACSI.MABS = DONTHUOC.MABS
GROUP BY BACSI.MABS, BACSI.TENBS;
 
--5.5 Cho biết tên những bác sĩ chưa khám cho bệnh nhân nào
SELECT DISTINCT BS.TENBS AS 'Tên bác sĩ'
FROM BACSI BS
LEFT JOIN DONTHUOC DT ON BS.MABS = DT.MABS
WHERE BS.MABS NOT IN (SELECT DISTINCT DT.MABS FROM DONTHUOC DT)
 
--6. Truy vấn Hợp/Giao/Trừ: 3 câu
--6.1 Cho biết các bệnh nhân đã khám ở khoa 'hô hấp' và 'ngoại khoa'
SELECT TENBN, CHUYENNGANH AS TENKHOA
FROM BENHNHAN BN
JOIN DONTHUOC DT ON BN.MABN = DT.MABN
JOIN BACSI BS ON DT.MABS = BS.MABS
WHERE BS.CHUYENNGANH = N'HÔ HẤP'
UNION
SELECT TENBN, CHUYENNGANH AS TENKHOA
FROM BENHNHAN BN
JOIN DONTHUOC DT ON BN.MABN = DT.MABN
JOIN BACSI BS ON DT.MABS = BS.MABS
WHERE BS.CHUYENNGANH = N'NGOẠI KHOA'
 
--6.2 Lấy thông tin các bệnh nhân chưa được kê đơn thuốc: truy vấn trừ
SELECT *
FROM BENHNHAN
LEFT JOIN DONTHUOC ON BENHNHAN.MABN = DONTHUOC.MABN
WHERE DONTHUOC.MADT IS NULL;
 
--6.3 Cho biết tên bệnh nhân đã sử dụng thuốc Kháng sinh Và Huyết áp?
SELECT DISTINCT TENBN,TENTHUOC
FROM BENHNHAN BN
INNER JOIN DONTHUOC DT ON BN.MABN = DT.MABN
INNER JOIN CT_DONTHUOC CDT ON DT.MADT = CDT.MADT
INNER JOIN THUOC T ON CDT.MATHUOC = T.MATHUOC
WHERE TENTHUOC = N'KHÁNG SINH'
UNION
SELECT DISTINCT TENBN,TENTHUOC
FROM BENHNHAN BN
INNER JOIN DONTHUOC DT ON BN.MABN = DT.MABN
INNER JOIN CT_DONTHUOC CDT ON DT.MADT = CDT.MADT
INNER JOIN THUOC T ON CDT.MATHUOC = T.MATHUOC
WHERE TENTHUOC = N'HUYẾT ÁP'
 
--7. Truy vấn Update, Delete:  7 câu
--7.1 Cập nhật giá dịch vụ NỘI SOI giảm 10%.
UPDATE DVKHAM 
SET GIADV = GIADV * 0.9
WHERE MADV=N'NỘI SOI';

--7.2 Xóa thông tin những hóa đơn khám bệnh có ngày lập từ năm 2021 trở về trước
DELETE FROM HOADON
WHERE YEAR(NGAYLAP) <= 2021;

--7.3 Cập nhật thông tin của bệnh nhân có mã BN001:
UPDATE BENHNHAN
   SET TENBN = N'NGUYỄN VĂN ANH'
   WHERE MABN = 'BN001';

--7.4 Xóa hóa đơn có mã HD002:
DELETE FROM HOADON
   WHERE MAHD = 'HD002';

--7.5 Cập nhật địa chỉ bệnh nhân 'BN002' là TPHCM
UPDATE BENHNHAN 
SET DIACHI = N'HỒ CHÍ MINH' 
WHERE MABN = 'BN002';

--7.6 Cập nhật thông tin chuyên ngành của bác sĩ 'BS001' thành chuyên ngành "nội tiêu hóa"?
UPDATE BACSI
SET CHUYENNGANH = N'NỘI TIÊU HÓA'
WHERE MABS = 'BS001';

--7.7 Xóa tất cả các đơn thuốc của bệnh nhân có mã BN009.
DELETE FROM CT_DONTHUOC
WHERE MADT IN (SELECT MADT FROM DONTHUOC WHERE MABN = 'BN009');

--8. Truy vấn sử dụng phép Chia: 2 câu
--8.1 danh sách bệnh nhân chưa mua đơn thuốc nào
SELECT MABN, TENBN
FROM BENHNHAN AS B
WHERE NOT EXISTS (
    SELECT 1
    FROM DONTHUOC AS D
    WHERE D.MABN = B.MABN);
 
--8.2 Cho biết tên bệnh nhân mà tất cả bác sĩ đã trị bệnh qua
SELECT TENBN
FROM BENHNHAN BN
INNER JOIN DONTHUOC DT ON BN.MABN = DT.MABN
INNER JOIN BACSI BS ON DT.MABS = BS.MABS
WHERE NOT EXISTS (SELECT*
                  FROM BACSI BS
				  WHERE NOT EXISTS (SELECT*
				                    FROM DONTHUOC DT
		WHERE BN.MABN = DT.MABN AND DT.MABS = BS.MABS))

--TẠO THỦ TỤC/HÀM
--1. Taọ proc để lấy toàn bộ bệnh nhân
CREATE PROC SelectAllBenhNhan 
	@TUKHOA NVARCHAR(50) 
--tìm kiếm bệnh nhân dựa vào từ khóa
	--1. tìm theo mã bệnh nhân
	--2. tìm theo tên, 
	--3. tìm theo số điện thoại
	-- loại tìm kiếm tương đối
AS
	SELECT 
		MABN,
		TENBN,
		GIOITINH,
		CONVERT (VARCHAR (10), NGAYSINH, 103) AS NGAYSINH, 
--định dạng ngày sinh theo dd/mm/yyyy
		DIACHI,
		SODIENTHOAI,
		TINHTRANGSUCKHOE
	FROM BENHNHAN
	WHERE
CAST(MABN AS VARCHAR(10)) LIKE '%' + LOWER(TRIM(@TUKHOA)) + '%'
		OR LOWER(TENBN) LIKE '%'+LOWER(LTRIM(@TUKHOA)) + '%'
		OR LOWER(GIOITINH) LIKE '%'+LOWER(LTRIM(@TUKHOA)) + '%'
		OR LOWER(NGAYSINH) LIKE '%'+LOWER(LTRIM(@TUKHOA)) + '%'
		OR LOWER(DIACHI) LIKE '%'+LOWER(LTRIM(@TUKHOA)) + '%'
		OR LOWER(SODIENTHOAI) LIKE '%'+LOWER(LTRIM(@TUKHOA)) + '%'
		OR LOWER(TINHTRANGSUCKHOE) LIKE '%'+LOWER(LTRIM(@TUKHOA)) + '%'
	ORDER BY TENBN
GO
-- thực thi proc
EXEC SelectAllBenhNhan 'bn001'

--2. Tạo proc để thêm mới một bệnh nhân vào bảng BENHNHAN
CREATE PROC ThemMoiBN
	@mabn VARCHAR(10),
	@tenbn NVARCHAR(50),
	@gioitinh NVARCHAR(5),
	@ngaysinh DATE,
	@diachi NVARCHAR(100),
	@sodienthoai VARCHAR(10),
	@tinhtrangsuckhoe NVARCHAR(100)
AS
BEGIN 
	--THÊM DỮ LIỆU MỚI
	INSERT INTO BENHNHAN
	(
		MABN,
		TENBN,
		GIOITINH,
		NGAYSINH,
		DIACHI,
		SODIENTHOAI,
		TINHTRANGSUCKHOE
	)
	VALUES
	(
		@mabn,
		@tenbn,
		@gioitinh,
		@ngaysinh,
		@diachi,
		@sodienthoai,
		@tinhtrangsuckhoe
	);
	--KIỂM TRA XEM ĐÃ INSERT THÀNH CÔNG HAY CHƯA
	IF @@ROWCOUNT >0 BEGIN RETURN 1 END --NẾU INSERT THÀNH CÔNG TRẢ VỀ 1
	ELSE BEGIN RETURN 0 END; -- NGƯỢC LẠI RETURN 0
END

--3. Tạo proc để xóa thông tin của bệnh nhân
CREATE PROC DeleteBN
	@MABN VARCHAR(10)
AS
BEGIN
	--XÓA CÁC DỮ LIỆU CHI TIẾT HÓA ĐƠN DỊCH VỤLIÊN QUAN TỚI HÓA ĐƠN CỦA BỆNH NHÂN CẦN XÓA 
	DELETE FROM HOADON_DV WHERE MAHD IN (SELECT MADT FROM DONTHUOC WHERE MABN = @MABN);
	DELETE FROM HOADON WHERE MABN = @MABN --xóa các hóa đơn của của bệnh nhân đó
	--XÓA CÁC DỮ LIỆU CHI TIẾT ĐƠN THUỐC LIÊN QUAN TỚI ĐƠN THUỐC CỦA BỆNH NHÂN
	DELETE FROM CT_DONTHUOC WHERE MADT IN (SELECT MADT FROM DONTHUOC WHERE MABN = @MABN);
	DELETE FROM DONTHUOC WHERE MABN = @MABN --xóa các đơn thuốc của bệnh nhân đó
	DELETE FROM BENHNHAN WHERE MABN = @MABN
IF @@ROWCOUNT >0 BEGIN RETURN 1 END --NẾU INSERT THÀNH CÔNG TRẢ VỀ 1
	ELSE BEGIN RETURN 0 END; -- NGƯỢC LẠI RETURN 0
END

--4. Tạo proc update thông tin bác sĩ
CREATE PROC UpdateBS
	@MABS VARCHAR(10),
	@TENBS NVARCHAR(50),
	@CHUYENNGANH NVARCHAR(30)
AS 
BEGIN
	UPDATE BACSI
	SET
		MABS=@MABS,
		TENBS=@TENBS,
		CHUYENNGANH=@CHUYENNGANH
	WHERE MABS = @MABS;
	IF @@ROWCOUNT >0 BEGIN RETURN 1 END --NẾU INSERT THÀNH CÔNG TRẢ VỀ 1
	ELSE BEGIN RETURN 0 END; -- NGƯỢC LẠI RETURN 0
END

--5. Tạo proc select thông tin chi tiết của thuốc
CREATE PROC selectThuoc
	@MATHUOC VARCHAR(10)
AS
BEGIN
	SELECT
		MATHUOC,
		TENTHUOC,
		GIATHUOC
	FROM THUOC
WHERE MATHUOC=@MATHUOC;
END

--TẠO 3 TRIGGER
--1 Tạo trigger đảm bảo giới tính của bệnh nhân chỉ là Nam hoặc Nữ
CREATE TRIGGER TRG_GIOITINHBN ON BENHNHAN INSTEAD OF INSERT
	AS
		BEGIN
			DECLARE @GT NVARCHAR(5)
				SELECT @GT = GIOITINH FROM INSERTED
				IF (@GT NOT IN (N'NAM',N'NỮ'))
				PRINT N'Bạn đã nhập sai giới tính'
				ROLLBACK TRAN
		END;

--Thực thi trigger
INSERT INTO BENHNHAN VALUES
('BN011',N'NGUYỄN VĂN AN',N'LGBT','01/13/1987',N'HÀ NỘI','0843132202',N'SỐT')
 
--2 Trigger đảm bảo giá nhập hàng luôn lớn hơn 0
CREATE TRIGGER TRG_GIANHAPLONHON0 ON THUOC FOR INSERT, UPDATE
AS
BEGIN
DECLARE @GIANHAP FLOAT
SELECT @GIANHAP = (SELECT GIATHUOC FROM INSERTED)
IF (@GIANHAP <= 0)
BEGIN
PRINT N'Giá nhập phải lớn hơn 0'
ROLLBACK TRAN
END
END

-- Thực thi trigger
INSERT INTO THUOC VALUES
('T010',N'VITAMIN',0)
 
--3 Trigger kiểm tra tính chính xác khi nhập số điện thoại của bệnh nhân 
CREATE TRIGGER TRG_KTSDT on BENHNHAN FOR INSERT, UPDATE AS
BEGIN
DECLARE @SDT varchar(10)
SELECT @SDT = (SELECT SODIENTHOAI FROM INSERTED)
IF (LEN (@SDT) < 10 or LEN (@SDT) > 10)
PRINT 'Do dai so dien thoai phai la 10 chu so' ROLLBACK TRAN
END;

-- Thực thi trigger
INSERT INTO BENHNHAN VALUES
('BN011', N'NGUYỄN VĂN AN', N'NAM', '01/13/1987', N'HÀ NỘI', '084313220', N'SỐT')

--TẠO VÀ PHÂN QUYỀN CHO 3 NGƯỜI DÙNG
--1. Người dùng 1:
-- Tạo một tài khoản USER1, một vai trò bệnh nhân. USER1 được thêm vào vai trò BENHNHAN bằng cách sử dụng EXECUTE sp_addrolemember.
CREATE LOGIN USER1 
WITH PASSWORD = N'USER1',
CHECK_EXPIRATION = OFF,
CHECK_POLICY = OFF
GO 
CREATE USER USER1
FOR LOGIN USER1
GO
CREATE ROLE BENHNHAN;
GRANT SELECT ON BACSI TO BENHNHAN
GO
GRANT SELECT ON HOADON TO BENHNHAN
GO
GRANT SELECT ON DVKHAM TO BENHNHAN
GO
GRANT SELECT ON CT_DONTHUOC TO BENHNHAN
GO
GRANT SELECT ON DONTHUOC TO BENHNHAN
GO
GRANT SELECT ON THUOC TO BENHNHAN
GO
GRANT SELECT ON BENHNHAN TO BENHNHAN
GO
GRANT SELECT ON HOADON_DV TO BENHNHAN
GO
EXECUTE sp_addrolemember BENHNHAN,USER1
 
--2. Người dùng 2:
-- Tạo một tài khoản USER2, vai trò bác sĩ, chỉ được xem DL trên các bảng BACSI,THUOC,DVKHAM, và thực hiện các câu lệnh DELETE, UPDATE, INSERT trên bảng HOADON,BENHNHAN,DONTHUOC,CT_DONTHUOC,HOADON_DV. USER2 được thêm vào vai trò BACSI bằng cách sử dụng EXECUTE sp_addrolemember.
CREATE LOGIN USER2 
WITH PASSWORD = N'USER2',
CHECK_EXPIRATION = OFF,
CHECK_POLICY = OFF
GO 

CREATE USER USER2
FOR LOGIN USER2
GO
CREATE ROLE BACSI;
GRANT SELECT ON BENHNHAN TO BACSI
GO
GRANT SELECT ON DONTHUOC TO BACSI
GO
GRANT SELECT ON DVKHAM TO BACSI
GO
GRANT SELECT ON CT_DONTHUOC TO BACSI
GO
GRANT SELECT ON THUOC TO BACSI
GO
GRANT SELECT ON HOADON TO BACSI
GO
GRANT SELECT ON HOADON_DV TO BACSI
GO
GRANT SELECT ON BACSI TO BACSI
GO
GRANT DELETE, UPDATE, INSERT 
ON BENHNHAN TO USER2
GO
GRANT DELETE, UPDATE, INSERT 
ON HOADON TO USER2
GO
GRANT DELETE, UPDATE, INSERT 
ON DONTHUOC TO USER2
GO
GRANT DELETE, UPDATE, INSERT 
ON CT_DONTHUOC TO USER2
GO
GRANT DELETE, UPDATE, INSERT 
ON HOADON_DV TO USER2
GO
EXECUTE sp_addrolemember BACSI,USER2
  
--3. Người dùng 3:
-- Tạo một tài khoản USER3, vai trò ADMIN, và thực hiện thao tác owner trên CSDL QLPK.
CREATE LOGIN USER3 
WITH PASSWORD = N'USER3',
CHECK_EXPIRATION = OFF,
CHECK_POLICY = OFF
GO 
CREATE USER USER3
FOR LOGIN USER3
GO
-- Gán vai trò người quản trị (admin) cho tài khoản
ALTER SERVER ROLE sysadmin
ADD MEMBER USER3;
-- Gán quyền owner cho tài khoản trên cơ sở dữ liệu QLPK
EXEC sp_addrolemember 'db_owner',USER3;



